ÿeGHighlightModeTabSel property:
	Type: Long
	Returns or sets a value that determines if and how the selected tab will be highlighted.

	This value consists in a group of flags that determine how to highlight a tab.

	7 = Background type mask.
	8 = Light background flag.
	16 = CaptionBold flag.
	32 = CaptionUnderlined flag.
	64 = FlatBar flag.
	128 = Grip for FlatBar flag. It needs FlatBar flag, so 192 = FlatBarWithGrip.
	256 = ExtraHeight flag.

	When the control is themed, this setting is mostly ignored, the only flags that has effect are CaptionBold and CaptionUnderlined.


HighlightTabExtraHeight property:
	Type: Single
	Returns or sets a value that determines the extra height that a tab will have when it is highlighted. This value is in units of the container. It must be between 0 (zero) and twice the TabHeight property value.


hWnd property:
	Type: Long (Read only, not available at design time)
	Returns the Windows handle of the control.


IconAlignment property:
	Type: NTIconAlignmentConstants
	Returns or sets the alignment of the icon (or picture) with respect of the tab caption.


IconCharHex property:
	Type: String
	Returns or sets a string representing the hexadecimal value of the character that will be used as the icon in the currently selected tab. If this property is set, anything in the picture properties is ignored.


IconColor property:
	Type: Long
	Returns sets the color of the icon (it doesn't work with pictures, but with icons set with IconCharHex).


IconColorMouseHover property:
	Type: Long
	Returns or sets the color that the icon will show when the mouse hovers it, for the non active tabs.

	IconColorMouseHoverTabSel property
	IconColorTabHighlighted property


IconColorMouseHoverTabSel property:
	Type: Long
	Returns or sets the color that the icon will show when the mouse hovers it, for the active tab.

	IconColorMouseHover property
	IconColorTabHighlighted property


IconColorTabHighlighted property:
	Type: Long
	Returns or sets the color used to draw the icon when the tab is highlighted (not the icon itself).


IconColorTabSel property:
	Type: Long
	Returns or sets the color used to draw the icon when the tab is seleted.


IconFont property:
	Type: Font
	Returns or sets the Font that will be used to draw the icon of the currently selected tab.
	Each tab can have a different font for its icon.


IconLeftOffset property:
	Type: Long
	Returns or sets the value in pixels of the offset for the left position when drawing the icon of the currently selected tab. It can be negative.


IconTopOffset property:
	Type: Long
	Returns or sets the value in pixels of the offset for the top position when drawing the icon of the currently selected tab. It can be negative.


Left property:
	Type: Single
	Returns or sets the distance between the internal left edge of the control and the left edge of its container.


LeftOffsetToHide property:
	Type: Long (Read only)
	Returns the shift to the left in twips that the SStabEx is using to hide the controls in the non-active tabs.

	With the original SSTab control that was fixed to 75000 twips, but now in hight DPI screen settings it can change to avoid overflow due to a Windows limitation.


MaskColor property:
	Type: Long
	Returns or sets the color that will be transparent for the bitmaps that are in the TabPicture, TabPic16, TabPic20 and TabPic24 properties.


MinSizeNeeded property:
	Type: Single (Read only)
	Returns the minimun Width (or Height, depending on the TabOpientation setting) of the control needed to show all the tabs in one row (without adding new rows).

	When TabWidthStyle is set to other than ntTWTabCaptionWidth or ntTWTabCaptionWidthFillRows, it returns 0 (zero).


MouseIcon property:
	Type: Picture
	Returns or sets the icon used as the mouse pointer when the MousePointer property is set to 99 (custom).


MousePointer property:
	Type: NTMousePointerConstants
	Returns or sets the type of mouse pointer displayed when over the control.


MouseTab property:
	Type: Long (Read only)
	Returns the index of the tab under the mouse. If there is no tab under the mouse it returns -1.


Name property:
	Type: String (Read only)
	Returns the name used in code to identify the control.


Object property:
	Type: Object (Read only)
	Returns the control instance without the extender.


OLEDropMode property:
	Type: NTOLEDropConstants
	Returns/sets how a target component handles drop operations.


OLEDropOnOtherTabs property:
	Type: Boolean
	Returns or sets a value that determines if the user in a OLE drag operation will be able to drop over inactive tabs or just over the selected tab.


Parent property:
	Type: Object (Read only)
	Returns the object in which the control is located.


Pic16 property:
	Type: Picture
	Returns or sets a bitmap to display on the current tab, when the application is DPI aware.

	Pic16 is used for 96 DPI, Pic20 for 120 DPI and Pic24 for 144 DPI. Others DPI setting are handled automatically.
	The application need to have a manifest file to declare it as DPI aware.
	When these pictures are set, the Picture property is ignored.
	Use TabPic16, TabPic20 and TabPic24 properties to set or get the pictures of any tab at run time.


Pic20 property:
	Type: Picture
	Returns or sets a bitmap to display on the current tab, when the application is DPI aware.

	Pic16 is used for 96 DPI, Pic20 for 120 DPI and Pic24 for 144 DPI. Others DPI setting are handled automatically.
	The application need to have a manifest file to declare it as DPI aware.
	When these pictures are set, the Picture property is ignored.
	Use TabPic16, TabPic20 and TabPic24 properties to set or get the pictures of any tab at run time.


Pic24 property:
	Type: Picture
	Returns or sets a bitmap to display on the current tab, when the application is DPI aware.

	Pic16 is used for 96 DPI, Pic20 for 120 DPI and Pic24 for 144 DPI. Others DPI setting are handled automatically.
	The application need to have a manifest file to declare it as DPI aware.
	When these pictures are set, the Picture property is ignored.
	Use TabPic16, TabPic20 and TabPic24 properties to set or get the pictures of any tab at run time.


Picture property:
	Type: Picture
	Returns or sets a bitmap or icon to display on the current tab. To get or set the picture of any tab at run time, use the TabPicture property.
	If IconCharHex property value is set, anything in this Picture property or its companion Pic16, etc. is ignored.


Redraw property:
	Type: Boolean (Not available at design time)
	Returns or sets a value that determines if the drawing of the control has to be updated with any change. Not available at design time.


RightToLeft property:
	Type: Boolean
	Returns or sets a value that determines the text display direction and control visual appearance on a bidirectional system.


Rows property:
	Type: Long (Default property, read only, not available at design time)
	Returns the number of rows of tabs.

	The Rows property value can change its value when new tabs are dinamically added or, when TabWidthStyle is set to ssTWSFixed or ssTWSNonJustified and TabsPerRow was changed, or TabWidthStyle is set to ssTWSJustified and the Width of the control changed, the tab captions changed or the Font setting has changed.
	You can use the Resize event to properly set the position of the contained controls.
	The RowsChange notifies of the change of this property.


ShowDisabledState property:
	Type: Boolean (Not available at design time)
	Returns or sets a value that determines if the tabs color will be darkened when the control is disabled (Enabled = False).
	If has no effect when the control is themed (Style = ntStyleWindows).


ShowFocusRect property:
	Type: Boolean
	Returns or sets a value that determines if the focus rectangle is visible on a tab when the tab gets the focus.


ShowRowsInPerspective property:
	Type: NTAutoYesNoConstants
	Returns or sets a value that determines when the control has more that one row of tabs, if they will be drawn changing the horizontal position on each row.

	If the value is ssYNAuto, the behavior will be determined by the Style property setting in this way: for ssStyleTabbedDialog and ssStylePropertyPage the rows will be drawn is perspective, and for ssStyleTabStrip without.


SoftEdges property:
	Type: Boolean
	Returns or sets a value that determines if the edges will be displayed with less contrast: lighter and more colored.
	With styles Flat and Windows it has no effect.


Style property:
	Type: NTStyleConstants
	Returns or sets the style of the tabs.

	For some other properties, it acts as a meta-property. It means that it sets at once certain features that can be set individually through other properties.
	It performs internal settings for TabAppearance, TabWidthStyle, ShowRowsInPerspective, HighlightMode and HighlightModeTabSel as long as these properties are set to Auto.
	The changes are internal, they are not reflected on these properties values (they remain set to Auto).

	It also can set if the control will have Windows Styles (the Windows "theme" look) or alrernatively a Flat appearance that unlocks other properties.


SubclassingMethod property:
	Type: NTSubclassingMethodConstants
	Returns/sets the sublassing method, what to subclass (only the UserControl or the Form too) and if the subclassing will be enabled at all. If subclassing is disabled or partially disabled some features may not work. This property is provided in case of incompatibility with other third party controls.


Tab property:
	Type: Long
	Returns or sets the current ('selected' or 'active') tab by its index.


TabAppearance property:
	Type: NTTabAppearanceConstants
	Returns or sets a value that determines the appearance of the tabs. When the control is themed, the theme defines the appearance.


TabCaption property:
	Type: String

	Additional parameter(s):
	    In	Required	Index	As	Long
	Returns or sets the caption of a tab identified by the Index parameter.
	Captions can have accelerators by adding "&" before the letter that will act as the accelerator.


TabControls property:
	Type: Collection (Read only)

	Additional parameter(s):
	    In	Required	nTab	As	Long
	    In/Out	Optional	GetChilds	As	Boolean
	Returns a collection of the controls that are inside a tab. The tab must be identified by the nTab parameter.

	The optional GetChilds parameter determines if only the controls that are directly contained in the SSTabEx will be returned, or also the controls contained into them. Its default value is True.

	It is not available at design time, and is read-only at run time.


TabData property:
	Type: Long

	Additional parameter(s):
	    In	Required	Index	As	Long
	Used to store any data as a Long value, similar to ListBox's ItemData. If the tabs are reordered, it will keep this data for this tab.


TabEnabled property:
	Type: Boolean

	Additional parameter(s):
	    In	Required	Index	As	Long
	Returns or sets a value that determines whether the tab identified by the Index argument enabled.


TabFixedWidth property:
	Type: Long

	Additional parameter(s):
	    In	Required	Index	As	Long
	Returns/sets a fixed width for a tab. To set it for its automatic width (according to the TabWidthStyle setting), set it to 0 (zero).

	Note: you can use the GetTabWidth function (or GetTabHeight for vertical orientations) for getting the normal size of the tab. That must be done while TabFixedWidth is set to 0 (zero).

	This property is not available at design time.


TabHeight property:
	Type: Single
	Returns or sets the height of tabs.


TabIconCharHex property:
	Type: String

	Additional parameter(s):
	    In	Required	Index	As	Variant
	Returns or sets a string representing the hexadecimal value of the character that will be used as the icon in the tab identified by the Index parameter. If this property is set, anything in the picture properties is ignored.


TabIconFont property:
	Type: Font

	Additional parameter(s):
	    In	Required	Index	As	Variant
	Returns or sets the Font that will be used to draw the icon of the tab identified by the Index parameter.
	Each tab can have a different font for its icon.


TabIconLeftOffset property:
	Type: Long

	Additional parameter(s):
	    In	Required	Index	As	Variant
	Returns or sets the value in pixels of the offset for the left position when drawing the icon of the tab identified by the Index parameter. It can be negative.


TabIconTopOffset property:
	Type: Long

	Additional parameter(s):
	    In	Required	Index	As	Variant
	Returns or sets the value in pixels of the offset for the top position when drawing the icon of the tab identified by the Index parameter. It can be negative.


TabMaxWidth property:
	Type: Single
	Returns or sets the maximum width of each tab. If set to 0 (zero), it means no maximun.

	When the TabWidthStyle property setting is ssTWSFixed and the TabMaxWidth property is set to 0 (zero), the control automatically sizes the tabs based on TabsPerRow property, to fit evenly across the control.
	Unlike the original SSTab, this property is no longer ignored when Style property is set to ssStylePropertyPage.

	If TabWidthStyle property setting is ntTWTabCaptionWidth, ntTWTabStripEmulation or ntTWTabCaptionWidthFillRows, It determines the maximun width that a tab can have, regardeless of the lenght of the caption.
	When a tab caption doesn't fit in the available width, if WordWrap is set to True it will have an additional line, and if it is set to False it will cut the caption text and add an ellipsis.
	In the case when TabWidthStyle setting is ntTWTabStripEmulation and it is needed more space than TabMaxWidth * Rows to fill all the rows space, then the tabs can have more width than the specified in the TabMaxWidth setting.


TabMinWidth property:
	Type: Single
	Returns or sets the minimun width of each tab. If set to 0 (zero), it means no minimun.


TabMousePointerHand property:
	Type: Boolean
	Returns or sets a value that determines if the mouse pointer over tabs will be the hand.


TabOrientation property:
	Type: NTTabOrientationConstants
	Returns or sets a value that determines on which side of the control the tabs will appear.


TabPic16 property:
	Type: Picture

	Additional parameter(s):
	    In	Required	Index	As	Variant
	Returns or sets the bitmap to be displayed on the tab specified by the Index parameter, when the application is DPI aware.
	TabPic16 is used for 96 DPI, TabPic20 for 120 DPI and TabPic24 for 144 DPI. Others DPI setting are handled automatically.
	The application need to have a manifest file to declare it as DPI aware.
	When these pictures are set, the TabPicture property is ignored.
	They can be accessed at design time through a property page.


TabPic20 property:
	Type: Picture

	Additional parameter(s):
	    In	Required	Index	As	Variant
	Returns or sets the bitmap to be displayed on the tab specified by the Index parameter, when the application is DPI aware.
	TabPic16 is used for 96 DPI, TabPic20 for 120 DPI and TabPic24 for 144 DPI. Others DPI setting are handled automatically.
	The application need to have a manifest file to declare it as DPI aware.
	When these pictures are set, the TabPicture property is ignored.
	They can be accessed at design time through a property page.


TabPic24 property:
	Type: Picture

	Additional parameter(s):
	    In	Required	Index	As	Variant
	Returns or sets the bitmap to be displayed on the tab specified by the Index parameter, when the application is DPI aware.
	TabPic16 is used for 96 DPI, TabPic20 for 120 DPI and TabPic24 for 144 DPI. Others DPI setting are handled automatically.
	The application need to have a manifest file to declare it as DPI aware.
	When these pictures are set, the TabPicture property is ignored.
	They can be accessed at design time through a property page.


TabPicture property:
	Type: Picture

	Additional parameter(s):
	    In	Required	Index	As	Long
	Returns or sets the bitmap or icon to display on the tab specified by the Index argument.


Tabs property:
	Type: Long
	Returns or sets the total number of tabs.


TabsEndFreeSpace property:
	Type: Long
	Returns or sets the size of an optional free space after the last tab (for top-otiented tabs that is the rightmost tab).


TabSeparation property:
	Type: Long
	Returns or sets the number of pixels of separation between tabs. The value must be between 0 (zero) and 20.
	When the control has Windows visual styles (Windows "theme"), values less than two pixels are ignored, since the themed tabs have two pixels of separation by design.


TabsPerRow property:
	Type: Long
	Returns or sets the number of tabs for each row.
	If TabWidthStyle property setting is other than ntTWFixed or ntTWTabCaptionWidth, this setting has no effect. If TabWidthStyle property is set to Auto, it has effect only for styles ssStyleTabbedDialog and ssStylePropertyPage.


TabTag property:
	Type: String

	Additional parameter(s):
	    In	Required	Index	As	Long
	Similar to a Tag property, but for each tab. You can store any string there. If the tabs are reordered, it will keep this data for this tab.


TabToolTipText property:
	Type: String

	Additional parameter(s):
	    In	Required	Index	As	Variant
	Returns or sets the text that will be shown as tooltip text when the mouse pointer is over the tab identified by the Index parameter.
	If the tab has not a TabToolTipText set, it will show the control ToolTipText, if there is any text set on that property.


TabTransition property:
	Type: NTTabTransitionConstants
	Returns or sets a value that determines whether the transition between tabs will be with an effect that smooths the transition (and its speed).


TabVisible property:
	Type: Boolean

	Additional parameter(s):
	    In	Required	Index	As	Long
	Returns or sets a value that determines whether the tab ident
ÿ¡.NEWTABCTL REFERENCE

Introduction:
This control is a further development of SSTabEx project.
It still keeps backward compatibility with SSTab (fully), and 
mostly with SSTabEx, although some properties have been 
changed.

This new control introduces the "Flat" style and many related 
properties.
It also introduces "Themes", that are a set of property settings 
stored together.
Another thing new is the TDI mode. TDI stands for "Tabbed 
Document Interface", as an alternative to SDI and MDI.

Other new features are:
CanReorderTabs (property), for allowing tab dragging.
Icons in tabs using icon fonts.

*NewTab control*
- Tabbed control for VB6.
Backward compatible with SSTab (fully), and with SSTabEx 
(mostly).

Properties: 

AutoRelocateControls property:
	Type: NTAutoRelocateControlsConstants
	Returns or sets a value that determines if the contained 
controls will be automatically relocated when the tab body 
changes in size or position.

	Values:
	ntRelocateOnTabOrientationChange: The contained 
controls will be automatically relocated when TabOrientation 
changes.
	ntRelocateAlways: The contained controls will be 
automatically relocated when TabOrientation changes and also 
when the tab space changes in height.
	ntRelocateNever:  The contained controls will never be 
automatically relocated. Choose this value if you are relocating 
the controls by code in the Form_Resize or Resize events.


AutoTabHeight property:
	Type: Boolean
	Returns or sets the a value that determines whether the 
tab height (and value of property TabHeight) is set automatically 
according to the font (and tab icons (or pictures, in case there are 
set icons or pictures). Note: it asumes one-liner captions.
	If the property TabHeight is manually set, 
AutoTabHeight is then set to False.
	For newly added controls, its default it True, but if you 
are updating from a previous version or an SSTab control, it will 
be set to False.


BackColor property:
	Type: Long
	Returns or sets the background color. The background 
color is not the color of the tabs background (that color is 
handled by the BackColorTabs property, nor the color of the 
selected tab, hadled by BackColorTabSel property) but the color 
ouside the tabs.


BackColorTabs property:
	Type: Long
	Returns or sets the background color of the tabs, 
except the active tab that is set by BackColorTabSel.
	When the control is themed, this property value has no 
effect.


BackColorTabSel property:
	Type: Long
	Returns or sets the color of the active tab, including the 
tab body (the space were the contained controls are located).
	If ChangeControlsBackColor is True, changing this color 
will change also the BackColor of the contained controls.
	When the control is themed, this property value has no 
effect.


BackStyle property:
	Type: NTBackStyleConstants
	Returns or sets the a value that determines whether the 
background will be opaque or transparent.


BodyHeight property:
	Type: Single (Read only)
	Returns the height of the "tab body". The tab body is 
the space available to place contained controls.
	They return the value in Twips.


BodyLeft property:
	Type: Single (Read only)
	Returns the left of the "tab body". The tab body is the 
space available to place contained controls.
	They return the value in Twips.


BodyTop property:
	Type: Single (Read only)
	Returns top of the "tab body". The tab body is the 
space available to place contained controls.
	They return the value in Twips.


BodyWidth property:
	Type: Single (Read only)
	Returns the width of the "tab body". The tab body is the 
space available to place contained controls.
	They return the value in Twips.


CanReorderTabs property:
	Type: Boolean
	Returns or sets a value that determines whether the 
user will be able to change tab positions by dragging them with 
the mouse.


Caption property:
	Type: String
	Returns or sets the caption of the currently selected tab 
by the Tab property.
	Captions can have accelerators by adding "&" before 
the letter that will act as the accelerator.


ChangeControlsBackColor property:
	Type: Boolean
	Returns or sets a value that determines if the 
background color of the contained controls will be changed 
according to the background color of the tabs (the 
BackColorTabSel property value).

	If Windows Visual Styles are applied (Style = 
ntStyleWindows), the background of the controls are painted with 
the background of the themed tab body, so this property has no 
effect in that case.
	If ChangeControlsBackColor is False, the BackColor of 
the contained controls is left unchanged.
	If ChangeControlsBackColor is True, and the control is 
not themed, changing the BackColorTabSel propery value will 
also change the BackColor of the contained controls, but only 
when their BackColor's has the same color as the previous 
BackColorTabSel setting.
	If ChangeControlsBackColor is True, and the control is 
themed, only the controls that has the BackColor property value 
set to the same color of BackColorTabSel are changed.


ChangeControlsForeColor property:
	Type: Boolean
	Returns or sets a value that determines if the text color 
of the contained controls will be changed according to the 
ForeColorTabSel property value.

	If ChangeControlsForeColor is False, the ForeColor of 
the contained controls is left unchanged.
	If ChangeControlsForeColor is True, and the control is 
not themed, changing the ForeColorTabSel propery value will also 
change the ForeColor of the contained controls, but only when 
their ForeColor's has the same color as the previous 
ForeColorTabSel setting.
	If ChangeControlsBackColor is True, and the control is 
themed, only the controls that has the ForeColor property value 
set to the same color of ForeColorTabSel are changed.


Container property:
	Type: Object
	Returns the control's container.


ControlLeft property:
	Type: Single

	Additional parameter(s):
	    In	Required	ControlName	As	String
	Returns or sets the Left of a contained control.
	The argument ControlName must be the name of a 
contained control.


Controls property:
	Type: ContainedControls (Read only)
	Returns a collection of the controls that were added to 
the SSTabEx.

	It only holds controls that are directly contained in the 
control, it does not include controls that are inside others 
controls. Also see the TabControls property.
	It is not available at design time, and is read-only at run 
time.


DragIcon property:
	Type: Picture
	Returns or sets the icon to be used as mouse pointer in 
a drag-and-drop operation.


DragMode property:
	Type: Integer
	Returns or sets a value that determines whether manual 
or automatic drag mode is used for a drag-and-drop operation.


Enabled property:
	Type: Boolean
	Returns or sets a value that determines whether a form 
or control can respond to user-generated events.


EndOfTabs property:
	Type: Single (Read only)
	Returns a value that indicates where the last tab ends. 
Depending on the TabOrientation setting, it can be the rightmost 
tab (orientation top and bottom), the topmost tab (orientation left) 
or the bottommost tab (orientation right).


FlatBarColorHighlight property:
	Type: Long
	Returns or sets the color of the bar when a tab is 
highlighted in flat style.


FlatBarColorInactive property:
	Type: Long
	Returns or sets the color of the bar when a tab is 
inactive in flat style.


FlatBarColorTabSel property:
	Type: Long
	Returns or sets the color of the bar when a tab is 
selected in flat style.


FlatBarGripHeight property:
	Type: Long
	Returns or sets a value in pixels that determines the 
height of a grip for the highlight bar in the flat style. A negative 
value defines a notch instead.


FlatBarHeight property:
	Type: Long
	Returns or sets the height in pixels of the bar in flat 
style.


FlatBarPosition property:
	Type: NTFlatBarPosition
	Returns or sets the position of the bar in flat style. It 
can be at the top (ntBarPositionTop)  or at the bottom 
(ntBarPositionBottom).


FlatBodySeparationLineColor property:
	Type: Long
	Returns or sets the color of the separation line between 
the tabs and the body in flat style.


FlatBodySeparationLineHeight property:
	Type: Long
	Returns or sets the height in pixels of the separation 
line between the tabs and the body in flat style.


FlatBorderColor property:
	Type: Long
	Returns or sets the color of the border in flat style.


FlatBorderMode property:
	Type: NTFlatBorderModeConstants
	Returns or sets the way the border will be drawn in flat 
style.
	It may be around the selected tab (ntBorderTabSel) or 
all the control (ntBorderTabs).


FlatRoundnessBottom property:
	Type: Long
	Returns or sets the size in pixels of the roundness of 
the bottom corners.


FlatRoundnessTabs property:
	Type: Long
	Returns or sets the size in pixels of the roundness of 
the tabs corners.


FlatRoundnessTop property:
	Type: Long
	Returns or sets the size in pixels of the roundness of 
the top corners.


FlatTabBorderColorHighlight property:
	Type: Long
	Returns or sets the color that is used to highlight the 
tabs with a border when the mouse hovers on them, and the 
HighlightMode property has the corresponding flag 
ntHLFlatDrawBorder.


FlatTabBorderColorTabSel property:
	Type: Long
	Returns or sets the color that is used to highlight the 
active tab with a border when the HighlightModeTabSel property 
has the corresponding flag ntHLFlatDrawBorder.


FlatTabsSeparationLineColor property:
	Type: Long
	Returns or sets the color of the separation line between 
tabs in flat style.


Font property:
	Type: Font
	Returns or sets a Font object correspondig to the font 
that will be used to display the tab captions.


ForeColor property:
	Type: Long
	Returns or sets the color of the tab captions.


ForeColorHighlighted property:
	Type: Long
	Returns or sets the color used to draw the captions of 
the inactive tabs when they are highlighted because the mouse is 
over them.


ForeColorTabSel property:
	Type: Long
	Returns or sets the the caption color of the active tab.


HandleHighContrastTheme property:
	Type: Boolean
	When True (default setting), the control handles the 
system changes to high contrast theme automatically by 
changing the colors of the control to system's high contrast 
colors.


Height property:
	Type: Single
	Returns or sets the height of the control.


HelpContextID property:
	Type: Long
	Returns or sets a string expression containing the 
context ID for a topic in a Help file.


HighlightColor property:
	Type: Long
	Returns or sets the color used to highlight an inactive 
tab when the user hovers over it.


HighlightColorTabSel property:
	Type: Long
	Returns or sets the color used to highlight the selected 
tab.


HighlightEffect property:
	Type: Boolean
	Returns or sets a value that determines whether tabs 
will display a progressive effect when they are highlighted due to 
hovering over them.


HighlightMode property:
	Type: Long
	Returns or sets a value that determines if and how the 
tabs will appear highlighted when the mouse is over them.

	This value consists in a group of flags that determine 
how to highlight a tab.

	7 = Background type mask.
	8 = Light background flag.
	16 = CaptionBold flag.
	32 = CaptionUnderlined flag.
	64 = FlatBar flag.
	128 = Grip for FlatBar flag. It needs FlatBar flag, so 192 
= FlatBarWithGrip.
	256 = ExtraHeight flag.

	When the control is themed, this setting is mostly 
ignored, the only flags that has effect are CaptionBold and 
CaptionUnderlined.
